1) Reverse Words in string

class Solution {
public:
    string reverseWords(string s) {

        string temp = "";
        string ans = "";

        // making left point to first non space char
        int left = 0;
        while (s[left] == ' ') {
            left++;
        }

        // making right point to last non space char
        int right = s.length() - 1;
        while (s[right] == ' ') {
            right--;
        }

        while (left <= right) {
            if (s[left] != ' ') {
                temp += s[left];
            }
            else {
                if (s[left - 1] == ' ') {
                    left++;
                    continue;
                }
                else {
                    ans = temp + " " + ans;
                    temp = "";
                }
            }
            left++;
        }
        ans = temp + " " + ans;
        ans.erase(ans.begin() + ans.length() - 1); // to erase extra space at the end
        return ans;
    }
};

2) Longest Palindrome

class Solution {
public:
    string longestPalindrome(string s) {
        
        int lenLP=1;
        int startLP=0;
        int n=s.length();

        for(int i=0;i<n;i++){
            int right=i; // initialize right to current index

            while(right<n && s[i]==s[right]) right++; // while equal characters increment right
            
            int left=i-1; // initialize left to current index - 1

            while(left>=0 && right<n && s[left]==s[right]){
                left--;
                right++;
            }

            int len=(right-1)-(left+1)+1;
            if(len>lenLP){
                lenLP=len;
                startLP=left+1;
            }
        }

        return s.substr(startLP,lenLP);

    }
};

3) Roman to Integer

class Solution {
public:
    int value (char a ){
        int g;
        if(a=='I')
            g=1;
        if(a=='V')
            g=5;
        if(a=='X')
         g= 10;
        if(a=='L')
           g= 50;
        if(a=='C')
           g= 100;
        if(a=='D')
           g= 500;
        if(a=='M')
            g= 1000;
        
        return g;
}
    int romanToInt(string s) {
        
        int k=0;
        for(int i=0;i<s.length();i++){
            if(value(s[i])<value(s[i+1])){
                k+=value(s[i+1])-value(s[i]);
                i++;
}
               else{
                   k+=value(s[i]);
}
}
               return k;
    }
};
